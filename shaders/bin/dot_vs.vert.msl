#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct camInfo
{
    float4x4 combined;
};

struct Particle
{
    packed_float3 position;
    float mass;
    float3 velocity;
};

struct instanceSSBO
{
    Particle particles[1];
};

struct main0_out
{
    float2 vertOut [[user(locn0)]];
    float vertScale [[user(locn1)]];
    float4 gl_Position [[position]];
};

vertex main0_out main0(constant camInfo& _41 [[buffer(0)]], const device instanceSSBO& _54 [[buffer(1)]], uint gl_VertexIndex [[vertex_id]], uint gl_InstanceIndex [[instance_id]])
{
    main0_out out = {};
    float2 vert;
    switch (int(gl_VertexIndex))
    {
        case 0:
        {
            vert = float2(0.0, 0.100000001490116119384765625);
            break;
        }
        case 1:
        {
            vert = float2(0.08660499751567840576171875, -0.0500000007450580596923828125);
            break;
        }
        case 2:
        {
            vert = float2(-0.08660499751567840576171875, -0.0500000007450580596923828125);
            break;
        }
    }
    out.gl_Position = _41.combined * float4(float3(vert, 0.0) + float3(_54.particles[int(gl_InstanceIndex)].position), 1.0);
    out.vertOut = vert;
    out.vertScale = 20.0;
    return out;
}

